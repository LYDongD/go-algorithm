## 最小的k个数

1 利用大小为k的优先级队列获取前k个元素
    | 先填充k个元素
	| 元素<=k个，则直接返回数组
	| 从k+1个元素开始，剔除当前优先级队列最大的元素
	    | 队列为大顶堆
		| 堆顶元素为最大值
	| 所有元素都处理完后
	    | 优先级队列的元素是最小的k个元素，遍历队列生成数组返回
    | 复杂度
	| nlogn

2 什么是大顶堆
    | 堆 -> 满二叉树
	| 大顶堆 -> 父比子元素都大
    | 堆的读写
	| 如何构建堆？
	    | 用数组构建堆
	    | 如何描述父子关系
		| 先空出第一个元素
		| left = parent * 2
		| right = parent * 2 + 1
		| 1 -> 2,3; 2 -> 4,5; 3 -> 6, 7
		| parent = left / 2; parent = right / 2
	| 如何插入一个元素？
	    | 堆未满
		| 插入数组末尾：i
		| 比较父元素: i / 2
		    | 比父元素小 -> 结束
		    | 比父元素大 -> 交换
			| 交换后继续比较父元素，直到比父元素小或直达根节点(1)为止
		| 复杂度 = 逻辑堆的层数：logn
	    | 堆已满
		| 比堆顶小，移除堆顶后插入
		    | 如何移除堆顶
			| 将堆顶更新为新元素
			| 从上往下，与子节点比较，选择较大的子节点交换
			    | 交换后继续往下比较，直到比子节点都大或已到达叶子节点


